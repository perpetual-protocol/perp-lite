name: Deploy Web

on:
    release:
        types: [created]

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            
            - name: Set variables
              id: set-variables
              run: |
                if [[ ${{ github.event.release.tag_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+-prod$ ]] \
                && [[ ${{ github.event.release.target_commitish }} = master ]]
                then
                    echo "::set-output name=release_env::production"
                    echo "::set-output name=aws_s3_bucket::${{ secrets.AWS_BUCKET_NAME_PROD }}"
                    echo "::set-output name=aws_access_key_id::${{ secrets.AWS_ACCESS_KEY_ID_PROD }}"
                    echo "::set-output name=aws_secret_access_key::${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}"
                elif [[ ${{ github.event.release.tag_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] \
                && [[ ${{ github.event.release.target_commitish }} = develop ]]
                then
                    echo "::set-output name=release_env::staging"
                    echo "::set-output name=aws_s3_bucket::${{ secrets.AWS_BUCKET_NAME }}"
                    echo "::set-output name=aws_access_key_id::${{ secrets.AWS_ACCESS_KEY_ID }}"
                    echo "::set-output name=aws_secret_access_key::${{ secrets.AWS_SECRET_ACCESS_KEY }}"
                else
                    echo "Your tag and branch are not matched."
                    exit 1
                fi
                echo "::set-output name=npm_cache_dir::$(npm config get cache)"

            - uses: actions/cache@v2
              with:
                  path: |
                      ${{ steps.set-variables.outputs.npm_cache_dir }}
                      **/node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Use Node.js 12.x
              uses: actions/setup-node@v1
              with:
                  node-version: 12.x

            - name: Install package dependencies
              run: npm ci

            - name: Build static website
              run: npm run build
              env:
                REACT_APP_STAGE: ${{ steps.set-variables.outputs.release_env }}
                REACT_APP_GITHUB_TAG: ${{ github.event.release.tag_name }}

            - name: Upload website to S3
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: --acl public-read --follow-symlinks --delete --cache-control 'no-store'
              env:
                  AWS_S3_BUCKET: ${{ steps.set-variables.outputs.aws_s3_bucket }}
                  AWS_ACCESS_KEY_ID: ${{ steps.set-variables.outputs.aws_access_key_id }}
                  AWS_SECRET_ACCESS_KEY: ${{ steps.set-variables.outputs.aws_secret_access_key }}
                  AWS_REGION: "ap-southeast-1"
                  SOURCE_DIR: "build"

            - name: Update metadata of index.html on S3
              uses: prewk/s3-cp-action@v0.1.1
              with:
                args: --metadata-directive REPLACE --cache-control no-cache --acl public-read
              env:
                AWS_ACCESS_KEY_ID: ${{ steps.set-variables.outputs.aws_access_key_id }}
                AWS_SECRET_ACCESS_KEY: ${{ steps.set-variables.outputs.aws_secret_access_key }}
                AWS_REGION: 'ap-southeast-1'
                SOURCE: "s3://${{ steps.set-variables.outputs.aws_s3_bucket }}/index.html"
                DEST: "s3://${{ steps.set-variables.outputs.aws_s3_bucket }}/index.html"

            - name: Update metadata of static/ on S3
              uses: prewk/s3-cp-action@v0.1.1
              with:
                args: --recursive --metadata-directive REPLACE --cache-control max-age=1209600,must-revalidate --acl public-read
              env:
                AWS_ACCESS_KEY_ID: ${{ steps.set-variables.outputs.aws_access_key_id }}
                AWS_SECRET_ACCESS_KEY: ${{ steps.set-variables.outputs.aws_secret_access_key }}
                AWS_REGION: 'ap-southeast-1'
                SOURCE: "s3://${{ steps.set-variables.outputs.aws_s3_bucket }}/static/"
                DEST: "s3://${{ steps.set-variables.outputs.aws_s3_bucket }}/static/"

            - name: Discord notification
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
              uses: Ilshidur/action-discord@master
              with:
                  args: "**[${{ steps.set-variables.outputs.release_env }}]** perp-lite deployed.
                        Tag: **${{ github.event.release.tag_name }}** (${{ github.event.release.html_url }})
                        ${{ github.event.release.body }}"
